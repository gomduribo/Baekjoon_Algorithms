# 1. 각 알파벳에 숫자를 지정해줄 방법을 생각해보자. 가장 대표적으로는 하나씩 지정해서 완전 탐색 하는 방법이 있다.

# 2. 완전 탐색하면 기본적으로 N의 숫자가 10이 되면 10!*10의 연산이 기본적으로 들어가버려서 2초안에 들어오기 불가능하다.

# 3. 다른 방법을 생각해보자. 서로 자릿수가 같거나 다른 알파벳을 숫자로 더해주는 과정을 거쳐간다 → 그렇다면 알파벳의 각각의 자릿수만큼 더한걸 모아보면 어떨까?

# 4. 예를들어 ABC와 ZACYX, CCB 라는 알파벳을 변환해서 지정해준다고 해보자. 3번에서 말한걸 이용하면 다음과 같은 과정으로 계산할 수 있다.

# ABC에서 A : 백의 자리수니까 100, B : 십의 자리수니까 10, C : 일의 자리수니까 1을 할당해주자.
# ZACYX : Z : 만의 자리수니까 10000,  A: 천의 자리수니까 1000, C : 백의 자리수니까 100, Y : 십의 자리수니까 10, X : 일의 자리수니까 1을 할당해주자CCB : C: 백의 자리수니까 100, C : 십의 자리수니까 10, B : 일의 자리수니까 1이제 각각의 알파벳에 해당되는 숫자를 모두 더해보자A = 100+ 1000 = 1100B = 10 + 1 = 11C = 1 + 100 + 100 + 10 = 211X = 1Y = 10Z = 100005. 이 숫자들을 어떻게 활용할 수 있을까? → 알파벳에 0~9까지 숫자를 할당해주니까, 가장 큰 자리수를 갖는 애부터 제일 높은 숫자를 하나씩 지정해줘서 더하면 최대값의 결과를 얻을 수 있다.Z(9) = 90000, A(8) = 8800, C(7) = 1477, B(6) = 66, Y(5) = 50, X(4) = 4이 숫자들을 다 더하면 최대 값인 100,397을 얻을 수 있다.
# https://edder773.tistory.com/97
import sys
N = int(sys.stdin.readline())
S = [sys.stdin.readline().strip() for _ in range(N)]
words = {} # 단어별 값을 지정
for s in S: 
    x = len(s)-1 # 10의 제곱을 해줄 값
    for i in s :
        if i in words:
            words[i] += 10**x # 있으면 x만큼 제곱한걸 더하고
        else :
            words[i] = 10**x # 없으면 x만큼 제곱해서 넣자
        x -= 1

words_sort = sorted(words.values(),reverse=True) # 딕셔너리의 value만 내림차순으로 가져오자
result = 0
num = 9
for k in words_sort:
    result += k * num # 내림차순 한거에 9부터 하나씩 곱해서 더해주자
    num -= 1
print(result)
